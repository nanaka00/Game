//=================================================================================================================
//
// ゲームの処理　〔game.cpp〕
// Anthor:Nanaka maeno
//
//=================================================================================================================
#include "main.h"
#include "game.h"
#include "bg.h"
#include "player.h"
#include "enemy.h"
#include "bullet.h"
#include "Score.h"
#include "explosion.h"
#include "sound.h"
#include "input.h"
#include "fade.h"
#include "light.h"
#include "pause.h"
#include "result.h"
#include "time.h"
#include "fade.h"
#include "life.h"

//=================================================================================================================
//	グローバル変数（cpp内で共通でも一つ一つの値）
//================================================================================================================
bool g_bPause = false;	// ポーズが押されたか

//*****************************************************************************************************************
//　ゲーム画面の初期化処理
//*****************************************************************************************************************
HRESULT InitGame(void)
{

	Initbg();			// 背景
	InitPlayer();		// プレイヤー
	InitEnemy();		// 敵
	InitBullet();		// 弾
	InitScore();		// スコア
	InitExplosion();	// 爆破
	InitLight();		// ライト
	InitPause();		// ポーズ
	InitTime();			// タイマー
	InitLife();			// 残機

	PlaySound(SOUND_LABEL_BGM001);	// サウンド開始

	return S_OK;
}


//*****************************************************************************************************************
//　ゲーム画面の終了処理
//*****************************************************************************************************************
void UninitGame(void)
{
	g_bPause = false;

	StopSound();
	Uninitbg();			// 背景
	UninitPlayer();		// プレイヤー
	UninitBullet();		// 弾		
	UninitEnemy();		// 敵
	UninitScore();		// スコア
	UninitExplosion();	// 爆破
	UninitLight();		// ライト
	UninitPause();		// ポーズ
 	UninitTime();		// タイマー
	UninitLife();		// 残機
}
//*****************************************************************************************************************
//　ゲーム画面の更新処理
//*****************************************************************************************************************
void UpdateGame(void)
{

	// ポーズボタンを押したとき
	if (GetKeyboardTrigger(DIK_P) == true)
	{
		g_bPause = g_bPause ? false : true;
	}

	if(g_bPause == true)
	{
		UpdatePause();		// ポーズ
	}
	else
	{
		UpdatePlayer();		// プレイヤー
		Updatebg();			// 背景
		UpdateBullet();		// 弾
		UpdateEnemy();		// 敵
		UpdateExplosion();	// 爆破
		UpdateScore();		// スコア
		UpdateLight();		// ライト
		UpdateTime();		// タイマー
		UpdateFade();		// フェード
		UpdateLife();		// 残機
	}
	
}

//*****************************************************************************************************************
//　ゲーム画面の描画処理
//*****************************************************************************************************************
void DrawGame(void)
{
	Drawbg();			// 背景
	DrawEnemy();		// 敵
	DrawBullet();		// 弾
	DrawPlayer();		// プレイヤー
	DrawExplosion();	// 爆破
	DrawLight();		// ライト
	DrawScore();		// スコア
	DrawTime();			// タイマー
	DrawLife();			// 残機

	// ポーズ画面の時
	if (g_bPause == true)
	{
		DrawPause();	// ポーズ
	}
}
//*****************************************************************************************************************
// ポーズの設定
//*****************************************************************************************************************
void SetPause(bool bPause)
{
	g_bPause = bPause;
}