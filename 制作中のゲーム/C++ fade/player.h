//======================================================================================================
//
// プレイヤー処理 [player.h]
// Author : nanaka maeno
//
//======================================================================================================
#ifndef _PLAYER_H_
#define _PLAYER_H_

//*******************************************************************************************************
// ヘッダファイルのインクルード
//*******************************************************************************************************
#include "scene2D.h"

//*******************************************************************************************************
// マクロ定義
//*******************************************************************************************************

//*******************************************************************************************************
// 前方宣言
//*******************************************************************************************************

class CLife;

//*******************************************************************************************************
// クラス定義
//*******************************************************************************************************
class CPlayer:public CScene2D
{
public:
	CPlayer();
	~CPlayer();
	static CPlayer *Create(D3DXVECTOR3 pos, D3DXVECTOR3 scale);
	HRESULT Init(D3DXVECTOR3 pos, D3DXVECTOR3 scale);
	void Uninit(void);
	void Update(void);
	void Draw(void);
	static HRESULT Load(void);
	static void Unload(void);
	void StatePlayer(void);
	void CollisionPlayer(D3DXVECTOR3 pos, D3DXVECTOR3 scale);

	void ControlPlayer(void);

	//==================================
	//列挙型
	//==================================
	typedef enum
	{
		PLAYERSTATE_NORMAL = 0,	// 通常
		PLAYERSTATE_DAMAGE,		// ダメージ		
		PLAYERSTATE_DEATH,		// 死亡
		PLAYERSTATE_MAX
	}PLAYERSTATE;

private:
	static LPDIRECT3DTEXTURE9 m_pTexture;	// プレイヤーのテクスチャーポインタ
	D3DXVECTOR3 m_Move;						// プレイヤーの動く量
	D3DXVECTOR3 m_Scale;					// プレイヤーのサイズ
	PLAYERSTATE m_State;					// プレイヤーの状態
	D3DXVECTOR3 m_Initpos;					// プレイヤーのサイズ
	static CLife *m_pLife;					// プレイヤーライフのポインタ
	int Rot;								// プレイヤーの回転


};
#endif 