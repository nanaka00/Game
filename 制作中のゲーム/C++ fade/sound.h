//=============================================================================
//
// サウンド処理 [sound.h]
// Author : Maeno Nanaka
//
//=============================================================================
#ifndef _SOUND_H_
#define _SOUND_H_

#include "main.h"

//*******************************************************************************************************
// ヘッダファイルのインクルード
//*******************************************************************************************************
#include "main.h"

//*******************************************************************************************************
// ライブラリファイルのリンク
//*******************************************************************************************************

//*******************************************************************************************************
// マクロ定義
//*******************************************************************************************************

//*******************************************************************************************************
// クラス定義
//*******************************************************************************************************
class CSound
{
public:
	CSound();
	~CSound();

	//*****************************************************************************
	// サウンドファイル
	//*****************************************************************************
	typedef enum
	{
		//SOUND_LABEL_BGM000 = 0,		// BGM	タイトル
		//SOUND_LABEL_BGM001,			// BGM	ゲーム
		//SOUND_LABEL_BGM002,			// BGM	ボス
		//SOUND_LABEL_BGM003,			// BGM	リザルト
		SOUND_LABEL_SE_SHOT = 0,		// 弾発射音
		//SOUND_LABEL_SE_HIT,			// ヒット音
		SOUND_LABEL_SE_EXPLOSION,	// 爆発音
		SOUND_LABEL_MAX,
	} SOUND_LABEL;
	HRESULT Init(HWND hWnd);
	void Uninit(void);
	HRESULT Play(SOUND_LABEL label);
	void Stop(SOUND_LABEL label);
	void Stop(void);

private:

	//*****************************************************************************
	// パラメータ構造体定義
	//*****************************************************************************
	typedef struct
	{
		char *pFilename;	// ファイル名
		int nCntLoop;		// ループカウント
	} SOUNDPARAM;

	HRESULT CheckChunk(HANDLE hFile, DWORD format, DWORD *pChunkSize, DWORD *pChunkDataPosition);
	HRESULT ReadChunkData(HANDLE hFile, void *pBuffer, DWORD dwBuffersize, DWORD dwBufferoffset);

	IXAudio2 *m_pXAudio2 = NULL;								// XAudio2オブジェクトへのインターフェイス
	IXAudio2MasteringVoice *m_pMasteringVoice = NULL;			// マスターボイス
	IXAudio2SourceVoice *m_apSourceVoice[SOUND_LABEL_MAX] = {};	// ソースボイス
	BYTE *m_apDataAudio[SOUND_LABEL_MAX] = {};					// オーディオデータ
	DWORD m_aSizeAudio[SOUND_LABEL_MAX] = {};					// オーディオデータサイズ

	// 各音素材のパラメータ
	SOUNDPARAM m_aParam[SOUND_LABEL_MAX] =
	{
		//{ "data/BGM/bgm007.wav", -1 },		// タイトル
		//{ "data/BGM/bgm010.wav", -1 },		// ゲーム
		//{ "data/BGM/bgm008.wav", -1 },		// リザルト
		{ "data/SE/shot003.wav", 0 },		// 弾発射音
		//{ "data/SE/hit002.wav", 0 },		// ヒット音
		{ "data/SE/explosion000.wav", 0 },	// 爆発音
	};

};


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

#endif
